[gd_scene load_steps=15 format=3 uid="uid://blnvcs84j4gw3"]

[ext_resource type="Script" path="res://desafio.gd" id="1_d1b6f"]
[ext_resource type="Texture2D" uid="uid://c18c54nd43wcx" path="res://assets/portrait.png" id="2_fotnj"]

[sub_resource type="Shader" id="Shader_gjjwl"]
code = "shader_type canvas_item;

uniform sampler2D tex;

void fragment()
{
	float _grad = texture(tex, UV).r;
    COLOR.rgb *= sin(_grad * PI / 2.0);
}"

[sub_resource type="Gradient" id="Gradient_xapyq"]

[sub_resource type="GradientTexture2D" id="GradientTexture2D_wl7rt"]
gradient = SubResource("Gradient_xapyq")
fill_to = Vector2(1, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4f3iq"]
shader = SubResource("Shader_gjjwl")
shader_parameter/tex = SubResource("GradientTexture2D_wl7rt")

[sub_resource type="GDScript" id="GDScript_swply"]
script/source = "extends ColorRect
"

[sub_resource type="GDScript" id="GDScript_7xduy"]
script/source = "extends ColorRect

const HANKS := {
	\"Iron\": Color(\"#799c89\"),
	\"Bronze\": Color(\"#e67147\"),
	\"Silver\": Color(\"#99acb0\"),
	\"Gold\": Color(\"#c9a949\"),
	\"Diamond\": Color(\"#7e6ee6\"),
	\"Legendary\": Color(\"#e3444c\"),
	\"Imortal\": Color(\"#533a63\"),
	# \"Radiant\": Color(\"#ffbfc0\"),
}

var current_color: Color

func _ready() -> void:
	color = HANKS[HANKS.keys()[0]]  # Default to first

func change_color(to_hank: String) -> void:
	print(to_hank)
	var to: Color = HANKS[to_hank]
	var tween := get_tree().create_tween()\\
			.bind_node(self)\\
			.set_trans(Tween.TRANS_SINE)\\
			.set_ease(Tween.EASE_IN_OUT)
	tween.tween_property(self, \"color\", to, 1.0)
"

[sub_resource type="Shader" id="Shader_bvl05"]
code = "shader_type canvas_item;
uniform sampler2D bg: source_color;

void fragment() {
	if (COLOR.a < 1.0) {
		COLOR.a = 1.0;
		COLOR.rgba = texture(bg, UV);
	}
}
"

[sub_resource type="Gradient" id="Gradient_dp78m"]
colors = PackedColorArray(0.498039, 0.27451, 0.631373, 1, 0.352941, 0.588235, 0.486275, 0.466667)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_gg4es"]
gradient = SubResource("Gradient_dp78m")
fill_to = Vector2(1, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ge2gi"]
shader = SubResource("Shader_bvl05")
shader_parameter/bg = SubResource("GradientTexture2D_gg4es")

[sub_resource type="GDScript" id="GDScript_i3sw3"]
script/source = "extends TextureRect

const EXPRESSIONS := {
	\"normal\": preload(\"res://assets/portrait.png\"),
	\"preocupied\": preload(\"res://assets/portrait_preocupied.png\"),
	\"unhappy\": preload(\"res://assets/portrait_unhappy.png\"),
}

func _ready() -> void:
	set_expression(\"preocupied\")

func set_expression(to: String) -> void:
	self.texture = EXPRESSIONS[to]
"

[sub_resource type="GDScript" id="GDScript_3xib7"]
script/source = "extends LineEdit

signal update_text(String)
@onready var default_text: String = %Hero.text

func _on_text_changed(new_text: String) -> void:
	if new_text:
		new_text = new_text.capitalize()
	else:
		new_text = default_text
	
	update_text.emit(new_text)
"

[node name="Hero" type="Node"]
script = ExtResource("1_d1b6f")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_4f3iq")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.626374, 0.273989, 0.632703, 0.564706)
script = SubResource("GDScript_swply")

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -137.5
offset_top = -199.5
offset_right = 137.5
offset_bottom = 199.5
grow_horizontal = 2
grow_vertical = 2

[node name="Output" type="HBoxContainer" parent="VBoxContainer"]
layout_mode = 2
metadata/_edit_group_ = true

[node name="Hero" type="Label" parent="VBoxContainer/Output"]
unique_name_in_owner = true
layout_mode = 2
text = "Hero"

[node name="HankLabel" type="Label" parent="VBoxContainer/Output"]
layout_mode = 2
text = "hank:"

[node name="Hank" type="Label" parent="VBoxContainer/Output"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
text = "DEFAULT"

[node name="Portrait" type="ColorRect" parent="VBoxContainer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(275, 275)
layout_mode = 2
color = Color(0.901961, 0.443137, 0.278431, 1)
script = SubResource("GDScript_7xduy")

[node name="Face" type="TextureRect" parent="VBoxContainer/Portrait"]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_ge2gi")
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -128.0
offset_top = -128.0
offset_right = 128.0
offset_bottom = 128.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("2_fotnj")
script = SubResource("GDScript_i3sw3")

[node name="Bottom" type="VBoxContainer" parent="VBoxContainer"]
layout_mode = 2

[node name="Inputs" type="GridContainer" parent="VBoxContainer/Bottom"]
layout_mode = 2
size_flags_horizontal = 4
columns = 2

[node name="NameLabel" type="Label" parent="VBoxContainer/Bottom/Inputs"]
layout_mode = 2
size_flags_horizontal = 2
text = "Name:"
horizontal_alignment = 1

[node name="Name" type="LineEdit" parent="VBoxContainer/Bottom/Inputs"]
custom_minimum_size = Vector2(130, 0)
layout_mode = 2
size_flags_horizontal = 2
placeholder_text = "HERO"
max_length = 8
script = SubResource("GDScript_3xib7")

[node name="WinsLabel" type="Label" parent="VBoxContainer/Bottom/Inputs"]
layout_mode = 2
size_flags_horizontal = 2
text = "Victories:"
horizontal_alignment = 1

[node name="Wins" type="SpinBox" parent="VBoxContainer/Bottom/Inputs"]
layout_mode = 2
size_flags_horizontal = 2
max_value = 99999.0

[node name="LossesLabel" type="Label" parent="VBoxContainer/Bottom/Inputs"]
layout_mode = 2
size_flags_horizontal = 2
text = "Losses:"
horizontal_alignment = 1

[node name="Losses" type="SpinBox" parent="VBoxContainer/Bottom/Inputs"]
layout_mode = 2
size_flags_horizontal = 2
max_value = 99999.0

[node name="Balance" type="HBoxContainer" parent="VBoxContainer/Bottom"]
layout_mode = 2
size_flags_horizontal = 3
alignment = 2
metadata/_edit_group_ = true

[node name="BalanceLabel" type="Label" parent="VBoxContainer/Bottom/Balance"]
layout_mode = 2
text = "Balance:"

[node name="Balance" type="Label" parent="VBoxContainer/Bottom/Balance"]
unique_name_in_owner = true
layout_mode = 2
text = "999"

[connection signal="text_changed" from="VBoxContainer/Bottom/Inputs/Name" to="VBoxContainer/Bottom/Inputs/Name" method="_on_text_changed"]
[connection signal="update_text" from="VBoxContainer/Bottom/Inputs/Name" to="." method="set_hero_name"]
[connection signal="value_changed" from="VBoxContainer/Bottom/Inputs/Wins" to="." method="set_wins"]
[connection signal="value_changed" from="VBoxContainer/Bottom/Inputs/Losses" to="." method="set_losses"]
